{"mappings":"ACSA,6IAQI,0DAAA,0DAAA,0DAAA,0DCXA,6BDWA,6DAAA,6DAAA,6DAAA,8DCXA,4BDWA,6DAAA,6DAAA,6DAAA,8DCXA,4BDWA,6DAAA,6DAAA,6DAAA","sources":["components/uni-cols/uni-cols.css","components/uni-cols/uni-cols.scss","node_modules/.pnpm/@xenyo+sass-utils@1.6.0/node_modules/@xenyo/sass-utils/src/media.scss"],"sourcesContent":[".uni-cols {\n  row-gap: var(--uni-cols-row-gap, var(--uni-cols-gap, 0px));\n  column-gap: var(--uni-cols-column-gap, var(--uni-cols-gap, 0px));\n  display: grid;\n}\n\n.uni-cols-1 {\n  grid-template-columns: repeat(1, minmax(0, 1fr));\n}\n\n.uni-cols-2 {\n  grid-template-columns: repeat(2, minmax(0, 1fr));\n}\n\n.uni-cols-3 {\n  grid-template-columns: repeat(3, minmax(0, 1fr));\n}\n\n.uni-cols-4 {\n  grid-template-columns: repeat(4, minmax(0, 1fr));\n}\n\n@media (max-width: 1499.98px) {\n  .uni-cols-lg-1 {\n    grid-template-columns: repeat(1, minmax(0, 1fr));\n  }\n\n  .uni-cols-lg-2 {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n\n  .uni-cols-lg-3 {\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n  }\n\n  .uni-cols-lg-4 {\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n  }\n}\n\n@media (max-width: 999.98px) {\n  .uni-cols-md-1 {\n    grid-template-columns: repeat(1, minmax(0, 1fr));\n  }\n\n  .uni-cols-md-2 {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n\n  .uni-cols-md-3 {\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n  }\n\n  .uni-cols-md-4 {\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n  }\n}\n\n@media (max-width: 499.98px) {\n  .uni-cols-sm-1 {\n    grid-template-columns: repeat(1, minmax(0, 1fr));\n  }\n\n  .uni-cols-sm-2 {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n\n  .uni-cols-sm-3 {\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n  }\n\n  .uni-cols-sm-4 {\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n  }\n}\n\n/*# sourceMappingURL=uni-cols.css.map */\n","@use 'sass-utils' as *;\n\n$breakpoints: (\n  '': null,\n  '-lg': $lg,\n  '-md': $md,\n  '-sm': $sm,\n);\n\n.uni-cols {\n  display: grid;\n  row-gap: var(--uni-cols-row-gap, var(--uni-cols-gap, 0px));\n  column-gap: var(--uni-cols-column-gap, var(--uni-cols-gap, 0px));\n}\n\n@each $suffix, $breakpoint in $breakpoints {\n  @for $columns from 1 through 4 {\n    .uni-cols#{$suffix}-#{$columns} {\n      @include below($breakpoint) {\n        grid-template-columns: repeat($columns, minmax(0, 1fr));\n      }\n    }\n  }\n}\n","// Interval between breakpoint ranges\n$-interval: 0.02px;\n\n// Mixins\n@mixin below($max-width) {\n  @if ($max-width) {\n    @media (max-width: #{$max-width - $-interval}) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n@mixin above($min-width) {\n  @if ($min-width) {\n    @media (min-width: #{$min-width}) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n@mixin between($min-width, $max-width) {\n  @if ($min-width and $max-width) {\n    @media (min-width: #{$min-width}) and (max-width: #{$max-width - $-interval}) {\n      @content;\n    }\n  }\n  @else if ($max-width) {\n    @include below($max-width) {\n      @content;\n    }\n  }\n  @else if ($min-width) {\n    @include above($min-width) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n"],"names":[],"version":3,"file":"uni-cols.css.map"}